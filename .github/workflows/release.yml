name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.release.outputs.new_release_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: npm ci

      - name: Run semantic-release
        id: release
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: 22
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build and Upload Binaries
    needs: release
    if: needs.release.outputs.new_tag != ''
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
        include:
          - arch: amd64
            platform: linux/amd64
          - arch: arm64
            platform: linux/arm64/v8

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build binary
        run: |
          mkdir -p dist
          docker buildx build \
            --platform ${{ matrix.platform }} \
            --build-arg TARGETARCH=${{ matrix.arch }} \
            --output type=local,dest=./dist \
            -f Dockerfile.build .

      - name: Rename binary
        run: mv dist/multiproc dist/multiproc-${{ matrix.arch }}

      - name: Upload binary to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/multiproc-${{ matrix.arch }}
          tag_name: ${{ needs.release.outputs.new_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
